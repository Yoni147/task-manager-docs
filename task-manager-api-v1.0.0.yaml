openapi: 3.0.3
info:
  title: Task Manager API
  version: 1.0.0
  description: An API for managing tasks, including CRUD operations, pagination, and flexible search.

servers:
  - url: http://localhost:5299
    description: Local Development Server

paths:
  /api/tasks:
    post:
      summary: Retrieve all tasks with pagination and search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: Page number for pagination
                  default: 1
                pageSize:
                  type: integer
                  description: Number of tasks per page
                  default: 10
                searchQuery:
                  type: string
                  default: ''
                  description: Search query to filter tasks by title, description, or status
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulOperation'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/tasks/create:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/tasks/details:
    post:
      summary: Retrieve a task by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID of the task to retrieve
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulOperation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/tasks/update:
    put:
      summary: Update an existing task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulOperation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/tasks/delete:
    post:
      summary: Delete a task by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID of the task to delete
      responses:
        '204':
          description: Task deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          example: "Complete project documentation"
        description:
          type: string
          example: "Finalize and review all project-related documents"
        status:
          type: boolean
          example: false

    TaskCreateRequest:
      type: object
      required:
        - title
        - status
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 50
        description:
          type: string
          maxLength: 200
        status:
          type: boolean

    TaskUpdateRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          description: ID of the task to update
        title:
          type: string
          minLength: 3
          maxLength: 50
        description:
          type: string
          maxLength: 200
        status:
          type: boolean

  responses:
    SuccessfulOperation:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'

    Created:
      description: Task created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'

    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid request parameters"

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Task not found"

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "An unexpected error occurred"
